# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2015-2016 by Qcircuits Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""The manifest contributing the extensions to the main application.

"""
import os

import enaml
from enaml.workbench.api import PluginManifest, Extension, ExtensionPoint
from exopy.app.api import AppStartup
from exopy.tasks.api import Tasks, Task, Interface
from exopy_pulses.pulses.api import Context, Contexts, Shape, Shapes
from exopy.instruments.api import (Starter, Connection, Drivers, Driver,
                                  Settings)


enamldef QcircuitsManifest(PluginManifest):
    """The manifest declaring the extension points to the Exopy.

    """
    id = 'exopy_qcircuits'

    Extension:
        point = 'exopy.instruments.drivers'
        Drivers:
            path = 'exopy_qcircuits.instruments.drivers'
            architecture = 'Qcircuits'
            Drivers:
                path = 'visa'
                starter = 'exopy_hqc_legacy.starter.visa'
                Drivers:
                    manufacturer = 'Tabor'
                    Driver:
                        driver = 'tabor_awg:TaborAWG'
                        model = 'WX1284C'
                        kind = 'AWG'
                        connections = {'VisaGPIB': {'resource_class': 'INSTR'},
                                       'VisaUSB': {'resource_class': 'INSTR'},
                                       'VisaTCPIP': {'resource_class': 'INSTR'},
                                       'VisaRaw': {}
                                       }
                Drivers:
                    manufacturer = 'Keysight'
                    Driver:
                        driver = 'keysight_ena:KeysightENA'
                        model = 'ENA'
                        connections = {'VisaGPIB': {'resource_class': 'INSTR'},
                                       'VisaUSB': {'resource_class': 'INSTR'},
                                       'VisaTCPIP': {'resource_class': 'INSTR'}
                                       }

            Drivers:
                path = 'dll'
                starter = 'exopy_hqc_legacy.starter.dll'
                connections = {'LegacyDLLConnection': {}}
                Driver:
                    driver = 'alazar935x:Alazar935x'
                    manufacturer = 'AlazarTech'
                    model = 'ATS9350'

    Extension:
        id = 'exopy_qcircuits.tasks'
        point = 'exopy.tasks.declarations'
        Tasks:
            path = 'exopy_qcircuits.tasks.tasks'
            Tasks:
                path = 'instr'
                group = 'instr'
                Task:
                    task = 'alazar_tasks:DemodAlazarTask'
                    view = 'views.alazar_views:DemodAlazarView'
                    instruments = ['exopy_qcircuits.Qcircuits.Alazar935x']
                Task:
                    task = 'alazar_tasks:VNAAlazarTask'
                    view = 'views.alazar_views:VNAAlazarView'
                    instruments = ['exopy_qcircuits.Qcircuits.Alazar935x']                
                Task:
                    task = 'ena_tasks:ENASweepTask'
                    view = 'views.ena_views:ENASweepView'
                    instruments = ['exopy_qcircuits.Qcircuits.KeysightENA']
                Task:
                    task = 'ena_tasks:ENAGetTracesTask'
                    view = 'views.ena_views:ENAGetTracesView'
                    instruments = ['exopy_qcircuits.Qcircuits.KeysightENA']
                Task:
                    task = 'transfer_pulse_loop_task:TransferPulseLoopTask'
                    view = ('views.transfer_pulse_loop_task_view:'
                            'TransferPulseLoopView')
                    # Way to declare instrument dependencies without specifying
                    # any instrument.
                    instruments = [None]
                Task:
                    task = 'transfer_awg_file_task:TransferAWGFileTask'
                    view = ('views.transfer_awg_file_task_view:'
                            'TransferAWGFileView')
                    # Way to declare instrument dependencies without specifying
                    # any instrument.
                    instruments = [None]

    Extension:
        id = 'contexts'
        point = 'exopy.pulses.contexts'
        Contexts:
            path = 'exopy_qcircuits.pulses.contexts'
            Context:
                context = 'awg_context:TaborAWGContext'
                view = 'views.awg_context_view:TaborAWGContextView'
                instruments = ['exopy_qcircuits.Qcircuits.TaborAWG']

    Extension:
        id = 'shapes'
        point = 'exopy.pulses.shapes'
        Shapes:
            path = 'exopy_qcircuits.pulses.shapes'
            Shape:
                shape = 'gaussian_shape:GaussianShape'
                view = 'views.gaussian_shape_view:GaussianShapeView'
            Shape:
                shape = 'gaussian_shape:GaussianEdgeShape'
                view = 'views.gaussian_shape_view:GaussianEdgeShapeView'
            Shape:
                shape = 'arbitrary_shape:ArbitraryShape'
                view = 'views.arbitrary_shape_view:ArbitraryShapeView'
            Shape:
                shape = 'gaussian_shape:SechShape'
                view = 'views.gaussian_shape_view:SechShapeView'